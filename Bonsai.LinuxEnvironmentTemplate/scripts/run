#!/bin/bash
# run.sh

SETUP_SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
CONFIG="$SETUP_SCRIPT_DIR/Bonsai.config"

cleanup() {
    update_paths_to_windows
}

update_paths_to_linux() {
    ASSEMBLYLOCATIONS=$(xmllint --xpath '//PackageConfiguration/AssemblyLocations/AssemblyLocation/@location' "$CONFIG" | sed -e 's/^[^"]*"//' -e 's/"$//')
    for ASSEMBLYLOCATION in $ASSEMBLYLOCATIONS; do
        NEWASSEMBLYLOCATION="${ASSEMBLYLOCATION//\\/\/}"
        xmlstarlet edit --inplace --update "/PackageConfiguration/AssemblyLocations/AssemblyLocation[@location='$ASSEMBLYLOCATION']/@location" --value "$NEWASSEMBLYLOCATION" "$CONFIG"
    done

    LIBRARYFOLDERS=$(xmllint --xpath '//PackageConfiguration/LibraryFolders/LibraryFolder/@path' "$CONFIG" | sed -e 's/^[^"]*"//' -e 's/"$//')
    for LIBRARYFOLDER in $LIBRARYFOLDERS; do
        NEWLIBRARYFOLDER="${LIBRARYFOLDER//\\/\/}"
        xmlstarlet edit --inplace --update "//PackageConfiguration/LibraryFolders/LibraryFolder[@path='$LIBRARYFOLDER']/@path" --value "$NEWLIBRARYFOLDER" "$CONFIG"
    done
}

update_paths_to_windows() {
    ASSEMBLYLOCATIONS=$(xmllint --xpath '//PackageConfiguration/AssemblyLocations/AssemblyLocation/@location' "$CONFIG" | sed -e 's/^[^"]*"//' -e 's/"$//')
    for ASSEMBLYLOCATION in $ASSEMBLYLOCATIONS; do
        NEWASSEMBLYLOCATION="${ASSEMBLYLOCATION//\//\\}"
        xmlstarlet edit --inplace --update "/PackageConfiguration/AssemblyLocations/AssemblyLocation[@location='$ASSEMBLYLOCATION']/@location" --value "$NEWASSEMBLYLOCATION" "$CONFIG"
    done

    LIBRARYFOLDERS=$(xmllint --xpath '//PackageConfiguration/LibraryFolders/LibraryFolder/@path' "$CONFIG" | sed -e 's/^[^"]*"//' -e 's/"$//')
    for LIBRARYFOLDER in $LIBRARYFOLDERS; do
        NEWLIBRARYFOLDER="${LIBRARYFOLDER//\//\\}"
        xmlstarlet edit --inplace --update "//PackageConfiguration/LibraryFolders/LibraryFolder[@path='$LIBRARYFOLDER']/@path" --value "$NEWLIBRARYFOLDER" "$CONFIG"
    done
}

run_bonsai_on_linux() {
    if [[ ! -v BONSAI_RUNTIME_APPLICATION ]]; then
        echo "BONSAI_RUNTIME_APPLICATION environment variable is not set. Setting the default to 'wine'."
        BONSAI_RUNTIME_APPLICATION="wine"
    fi

    case "$BONSAI_RUNTIME_APPLICATION" in
        "mono")
            mono "$BONSAI_EXE_PATH" "$@"
            ;;
        "wine")
            wine "$BONSAI_EXE_PATH" "$@"
            ;;
        *)
            echo "The BONSAI_RUNTIME_APPLICATION environment variable is not recognized. Please set it to either 'mono' or 'wine' to run Bonsai on linux."
            cleanup
            exit 1
            ;;
    esac
    cleanup
}

if [[ -v BONSAI_EXE_PATH ]]; then
    if [ ! -f "$BONSAI_EXE_PATH" ]; then
        bash "$BONSAI_ENV_DIR"/Setup.sh
        bash "$BONSAI_ENV_DIR"/run "$@"
    else
        BONSAI_VERSION=$(xmllint --xpath "//PackageConfiguration/Packages/Package[@id='Bonsai']/@version" "$CONFIG" | sed -e 's/^[^"]*"//' -e 's/"$//')       
        if [[ -z ${BONSAI_VERSION+x} ]] && [ "$BONSAI_VERSION" \< "2.8.4" ]; then
            echo "Updating paths to Linux format..."
            trap cleanup EXIT INT TERM
            update_paths_to_linux
            run_bonsai_on_linux "$@"
        else
            run_bonsai_on_linux "$@"
        fi
    fi
else
    echo "BONSAI_EXE_PATH is not set. Please set the path to the Bonsai executable."
    return
fi